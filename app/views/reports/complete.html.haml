#report
  %p.timestamp
    %span.date= format_date(Time.now)
    %br
    %span.date= I18n.l Time.now, :format=>:short_time

  %h3 Redovisning - Huvudbok
  %p.conditions
    %p
      = @organ unless @organ.nil?
      = @series unless @series.nil?
    %p.date
      Datum:
      = format_date @activity_year.starts
      \-
      = format_date @activity_year.ends
  %ul
    - total_kredit = 0
    - total_debet = 0
    - @report.arrangement_reports.each do |arr_report|
      - arrangement = arr_report.arrangement
      - arr_kredit = 0
      - arr_debet = 0
      - arr_factor = arrangement.nil? ? 1 : -1 # Invert sign when arrangment is not nil
      %li.arrangement
        %h4
          - unless arrangement.nil?
            =arrangement[:organ]
            \-
            =arrangement
          - else
            Tillgångs och skuldkonton
        %ul  
          - arr_report.account_reports.each do |account_report|
            - change_debet = 0
            - change_kredit = 0
            %li.account
              %strong Konto: #{account_report.account[:number]}
              %table
                %tr
                  %th Vernr
                  %th Datum
                  %th Titel
                  %th Nämnd
                  %th Debet
                  %th Kredit
                  %th Saldo
                %tr
                  %td
                  %td= format_date @activity_year.starts
                  %td Ingående saldo
                  %td
                  %td= currency_clean(debet_or_zero account_report.ingoing_balance)
                  %td= currency_clean(kredit_or_zero account_report.ingoing_balance)
                  %td= currency_clean account_report.ingoing_balance*arr_factor
                - account_report.voucher_rows.each do |row|
                  - debet = [0, row["sum"]].max
                  - kredit = [0, row["sum"]].min
                  - change_debet += debet
                  - change_kredit += kredit
                  - voucher = Voucher.new({:id=>row["voucher_id"], :number=>row["voucher_number"], :title=>row["voucher_title"], :series_id=>row["series_id"], :organ_id=>row["organ_id"], :accounting_date=>row["accounting_date"]})
                  - Rails.logger.debug voucher.inspect
                  %tr
                    %td= link_to voucher.pretty_number, voucher
                    %td= format_date voucher.accounting_date
                    %td= voucher.title
                    %td= voucher.organ
                    %td= currency_clean debet
                    %td= currency_clean kredit
                    %td= currency_clean( (account_report.ingoing_balance + change_debet - change_kredit)*arr_factor )
                - arr_kredit += change_kredit
                - arr_debet += change_debet
                %tr
                  %td
                  %td= format_date @activity_year.ends
                  %td Utgående saldo
                  %td
                  %td= currency_clean(debet_or_zero(account_report.ingoing_balance)+change_debet)
                  %td= currency_clean(kredit_or_zero(account_report.ingoing_balance)+change_kredit)
                  %td= currency_clean ( (account_report.ingoing_balance+change_debet-change_kredit)*arr_factor )
                %tr
                  %td{:colspan=>6} Förändring #{account_report.account[:number]} #{format_date @activity_year.starts} - #{format_date @activity_year.ends}:
                  %td= currency_clean (change_debet-change_kredit)*arr_factor
      .summary
        %strong Summering #{arrangement.nil? ? "Tillgångar och skulder" : arrangement}:
        %p
          Debet: #{currency arr_debet}
          %br
          Kredit: #{currency arr_kredit}
          %br
          Resultat: #{currency (arrangement.nil? ? (arr_debet-arr_kredit) : (arr_kredit - arr_debet)*arr_factor )} 

      - total_kredit += arr_kredit
      - total_debet += arr_debet
  %hr
  .summary
    %strong Total förändring:
    %p
      Debet: #{currency total_debet}
      %br
      Kredit: #{currency total_kredit}
